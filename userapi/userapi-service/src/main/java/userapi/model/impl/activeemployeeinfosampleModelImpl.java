/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package userapi.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import userapi.model.activeemployeeinfosample;
import userapi.model.activeemployeeinfosampleModel;
import userapi.model.activeemployeeinfosampleSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the activeemployeeinfosample service. Represents a row in the &quot;activeemployeeinfosample&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link activeemployeeinfosampleModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link activeemployeeinfosampleImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see activeemployeeinfosampleImpl
 * @see activeemployeeinfosample
 * @see activeemployeeinfosampleModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class activeemployeeinfosampleModelImpl extends BaseModelImpl<activeemployeeinfosample>
	implements activeemployeeinfosampleModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a activeemployeeinfosample model instance should use the {@link activeemployeeinfosample} interface instead.
	 */
	public static final String TABLE_NAME = "activeemployeeinfosample";
	public static final Object[][] TABLE_COLUMNS = {
			{ "srno", Types.INTEGER },
			{ "Milestone", Types.VARCHAR },
			{ "EmpId", Types.VARCHAR },
			{ "Name", Types.VARCHAR },
			{ "Emailid", Types.VARCHAR },
			{ "Reason", Types.VARCHAR },
			{ "Photo", Types.VARCHAR },
			{ "DOJ", Types.VARCHAR },
			{ "ExitOn", Types.VARCHAR },
			{ "Birthday", Types.VARCHAR },
			{ "Anniversary", Types.VARCHAR },
			{ "Business", Types.VARCHAR },
			{ "Unit", Types.VARCHAR },
			{ "GradeGroup", Types.VARCHAR },
			{ "Grade", Types.VARCHAR },
			{ "FunctionName", Types.VARCHAR },
			{ "Department", Types.VARCHAR },
			{ "Designation", Types.VARCHAR },
			{ "Zone", Types.VARCHAR },
			{ "Region", Types.VARCHAR },
			{ "Location", Types.VARCHAR },
			{ "Product", Types.VARCHAR },
			{ "JVBranch", Types.VARCHAR },
			{ "Branch", Types.VARCHAR },
			{ "Costcenter", Types.VARCHAR },
			{ "AreaHandled", Types.VARCHAR },
			{ "gender", Types.VARCHAR },
			{ "FirstName", Types.VARCHAR },
			{ "LastName", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("srno", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("Milestone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("EmpId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Emailid", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Reason", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Photo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("DOJ", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ExitOn", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Birthday", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Anniversary", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Business", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Unit", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("GradeGroup", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Grade", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FunctionName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Department", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Designation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Zone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Region", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Location", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Product", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("JVBranch", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Branch", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Costcenter", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("AreaHandled", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("gender", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FirstName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("LastName", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table activeemployeeinfosample (srno INTEGER not null primary key,Milestone VARCHAR(75) null,EmpId VARCHAR(75) null,Name VARCHAR(75) null,Emailid VARCHAR(75) null,Reason VARCHAR(75) null,Photo VARCHAR(75) null,DOJ VARCHAR(75) null,ExitOn VARCHAR(75) null,Birthday VARCHAR(75) null,Anniversary VARCHAR(75) null,Business VARCHAR(75) null,Unit VARCHAR(75) null,GradeGroup VARCHAR(75) null,Grade VARCHAR(75) null,FunctionName VARCHAR(75) null,Department VARCHAR(75) null,Designation VARCHAR(75) null,Zone VARCHAR(75) null,Region VARCHAR(75) null,Location VARCHAR(75) null,Product VARCHAR(75) null,JVBranch VARCHAR(75) null,Branch VARCHAR(75) null,Costcenter VARCHAR(75) null,AreaHandled VARCHAR(75) null,gender VARCHAR(75) null,FirstName VARCHAR(75) null,LastName VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table activeemployeeinfosample";
	public static final String ORDER_BY_JPQL = " ORDER BY activeemployeeinfosample.srno ASC";
	public static final String ORDER_BY_SQL = " ORDER BY activeemployeeinfosample.srno ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(userapi.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.userapi.model.activeemployeeinfosample"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(userapi.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.userapi.model.activeemployeeinfosample"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(userapi.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.userapi.model.activeemployeeinfosample"),
			true);
	public static final long EMPID_COLUMN_BITMASK = 1L;
	public static final long SRNO_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static activeemployeeinfosample toModel(
		activeemployeeinfosampleSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		activeemployeeinfosample model = new activeemployeeinfosampleImpl();

		model.setSrno(soapModel.getSrno());
		model.setMilestone(soapModel.getMilestone());
		model.setEmpId(soapModel.getEmpId());
		model.setName(soapModel.getName());
		model.setEmailid(soapModel.getEmailid());
		model.setReason(soapModel.getReason());
		model.setPhoto(soapModel.getPhoto());
		model.setDOJ(soapModel.getDOJ());
		model.setExitOn(soapModel.getExitOn());
		model.setBirthday(soapModel.getBirthday());
		model.setAnniversary(soapModel.getAnniversary());
		model.setBusiness(soapModel.getBusiness());
		model.setUnit(soapModel.getUnit());
		model.setGradeGroup(soapModel.getGradeGroup());
		model.setGrade(soapModel.getGrade());
		model.setFunctionName(soapModel.getFunctionName());
		model.setDepartment(soapModel.getDepartment());
		model.setDesignation(soapModel.getDesignation());
		model.setZone(soapModel.getZone());
		model.setRegion(soapModel.getRegion());
		model.setLocation(soapModel.getLocation());
		model.setProduct(soapModel.getProduct());
		model.setJVBranch(soapModel.getJVBranch());
		model.setBranch(soapModel.getBranch());
		model.setCostcenter(soapModel.getCostcenter());
		model.setAreaHandled(soapModel.getAreaHandled());
		model.setGender(soapModel.getGender());
		model.setFirstName(soapModel.getFirstName());
		model.setLastName(soapModel.getLastName());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<activeemployeeinfosample> toModels(
		activeemployeeinfosampleSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<activeemployeeinfosample> models = new ArrayList<activeemployeeinfosample>(soapModels.length);

		for (activeemployeeinfosampleSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(userapi.service.util.ServiceProps.get(
				"lock.expiration.time.userapi.model.activeemployeeinfosample"));

	public activeemployeeinfosampleModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _srno;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setSrno(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _srno;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return activeemployeeinfosample.class;
	}

	@Override
	public String getModelClassName() {
		return activeemployeeinfosample.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("srno", getSrno());
		attributes.put("Milestone", getMilestone());
		attributes.put("EmpId", getEmpId());
		attributes.put("Name", getName());
		attributes.put("Emailid", getEmailid());
		attributes.put("Reason", getReason());
		attributes.put("Photo", getPhoto());
		attributes.put("DOJ", getDOJ());
		attributes.put("ExitOn", getExitOn());
		attributes.put("Birthday", getBirthday());
		attributes.put("Anniversary", getAnniversary());
		attributes.put("Business", getBusiness());
		attributes.put("Unit", getUnit());
		attributes.put("GradeGroup", getGradeGroup());
		attributes.put("Grade", getGrade());
		attributes.put("FunctionName", getFunctionName());
		attributes.put("Department", getDepartment());
		attributes.put("Designation", getDesignation());
		attributes.put("Zone", getZone());
		attributes.put("Region", getRegion());
		attributes.put("Location", getLocation());
		attributes.put("Product", getProduct());
		attributes.put("JVBranch", getJVBranch());
		attributes.put("Branch", getBranch());
		attributes.put("Costcenter", getCostcenter());
		attributes.put("AreaHandled", getAreaHandled());
		attributes.put("gender", getGender());
		attributes.put("FirstName", getFirstName());
		attributes.put("LastName", getLastName());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer srno = (Integer)attributes.get("srno");

		if (srno != null) {
			setSrno(srno);
		}

		String Milestone = (String)attributes.get("Milestone");

		if (Milestone != null) {
			setMilestone(Milestone);
		}

		String EmpId = (String)attributes.get("EmpId");

		if (EmpId != null) {
			setEmpId(EmpId);
		}

		String Name = (String)attributes.get("Name");

		if (Name != null) {
			setName(Name);
		}

		String Emailid = (String)attributes.get("Emailid");

		if (Emailid != null) {
			setEmailid(Emailid);
		}

		String Reason = (String)attributes.get("Reason");

		if (Reason != null) {
			setReason(Reason);
		}

		String Photo = (String)attributes.get("Photo");

		if (Photo != null) {
			setPhoto(Photo);
		}

		String DOJ = (String)attributes.get("DOJ");

		if (DOJ != null) {
			setDOJ(DOJ);
		}

		String ExitOn = (String)attributes.get("ExitOn");

		if (ExitOn != null) {
			setExitOn(ExitOn);
		}

		String Birthday = (String)attributes.get("Birthday");

		if (Birthday != null) {
			setBirthday(Birthday);
		}

		String Anniversary = (String)attributes.get("Anniversary");

		if (Anniversary != null) {
			setAnniversary(Anniversary);
		}

		String Business = (String)attributes.get("Business");

		if (Business != null) {
			setBusiness(Business);
		}

		String Unit = (String)attributes.get("Unit");

		if (Unit != null) {
			setUnit(Unit);
		}

		String GradeGroup = (String)attributes.get("GradeGroup");

		if (GradeGroup != null) {
			setGradeGroup(GradeGroup);
		}

		String Grade = (String)attributes.get("Grade");

		if (Grade != null) {
			setGrade(Grade);
		}

		String FunctionName = (String)attributes.get("FunctionName");

		if (FunctionName != null) {
			setFunctionName(FunctionName);
		}

		String Department = (String)attributes.get("Department");

		if (Department != null) {
			setDepartment(Department);
		}

		String Designation = (String)attributes.get("Designation");

		if (Designation != null) {
			setDesignation(Designation);
		}

		String Zone = (String)attributes.get("Zone");

		if (Zone != null) {
			setZone(Zone);
		}

		String Region = (String)attributes.get("Region");

		if (Region != null) {
			setRegion(Region);
		}

		String Location = (String)attributes.get("Location");

		if (Location != null) {
			setLocation(Location);
		}

		String Product = (String)attributes.get("Product");

		if (Product != null) {
			setProduct(Product);
		}

		String JVBranch = (String)attributes.get("JVBranch");

		if (JVBranch != null) {
			setJVBranch(JVBranch);
		}

		String Branch = (String)attributes.get("Branch");

		if (Branch != null) {
			setBranch(Branch);
		}

		String Costcenter = (String)attributes.get("Costcenter");

		if (Costcenter != null) {
			setCostcenter(Costcenter);
		}

		String AreaHandled = (String)attributes.get("AreaHandled");

		if (AreaHandled != null) {
			setAreaHandled(AreaHandled);
		}

		String gender = (String)attributes.get("gender");

		if (gender != null) {
			setGender(gender);
		}

		String FirstName = (String)attributes.get("FirstName");

		if (FirstName != null) {
			setFirstName(FirstName);
		}

		String LastName = (String)attributes.get("LastName");

		if (LastName != null) {
			setLastName(LastName);
		}
	}

	@JSON
	@Override
	public int getSrno() {
		return _srno;
	}

	@Override
	public void setSrno(int srno) {
		_srno = srno;
	}

	@JSON
	@Override
	public String getMilestone() {
		if (_Milestone == null) {
			return StringPool.BLANK;
		}
		else {
			return _Milestone;
		}
	}

	@Override
	public void setMilestone(String Milestone) {
		_Milestone = Milestone;
	}

	@JSON
	@Override
	public String getEmpId() {
		if (_EmpId == null) {
			return StringPool.BLANK;
		}
		else {
			return _EmpId;
		}
	}

	@Override
	public void setEmpId(String EmpId) {
		_columnBitmask |= EMPID_COLUMN_BITMASK;

		if (_originalEmpId == null) {
			_originalEmpId = _EmpId;
		}

		_EmpId = EmpId;
	}

	public String getOriginalEmpId() {
		return GetterUtil.getString(_originalEmpId);
	}

	@JSON
	@Override
	public String getName() {
		if (_Name == null) {
			return StringPool.BLANK;
		}
		else {
			return _Name;
		}
	}

	@Override
	public void setName(String Name) {
		_Name = Name;
	}

	@JSON
	@Override
	public String getEmailid() {
		if (_Emailid == null) {
			return StringPool.BLANK;
		}
		else {
			return _Emailid;
		}
	}

	@Override
	public void setEmailid(String Emailid) {
		_Emailid = Emailid;
	}

	@JSON
	@Override
	public String getReason() {
		if (_Reason == null) {
			return StringPool.BLANK;
		}
		else {
			return _Reason;
		}
	}

	@Override
	public void setReason(String Reason) {
		_Reason = Reason;
	}

	@JSON
	@Override
	public String getPhoto() {
		if (_Photo == null) {
			return StringPool.BLANK;
		}
		else {
			return _Photo;
		}
	}

	@Override
	public void setPhoto(String Photo) {
		_Photo = Photo;
	}

	@JSON
	@Override
	public String getDOJ() {
		if (_DOJ == null) {
			return StringPool.BLANK;
		}
		else {
			return _DOJ;
		}
	}

	@Override
	public void setDOJ(String DOJ) {
		_DOJ = DOJ;
	}

	@JSON
	@Override
	public String getExitOn() {
		if (_ExitOn == null) {
			return StringPool.BLANK;
		}
		else {
			return _ExitOn;
		}
	}

	@Override
	public void setExitOn(String ExitOn) {
		_ExitOn = ExitOn;
	}

	@JSON
	@Override
	public String getBirthday() {
		if (_Birthday == null) {
			return StringPool.BLANK;
		}
		else {
			return _Birthday;
		}
	}

	@Override
	public void setBirthday(String Birthday) {
		_Birthday = Birthday;
	}

	@JSON
	@Override
	public String getAnniversary() {
		if (_Anniversary == null) {
			return StringPool.BLANK;
		}
		else {
			return _Anniversary;
		}
	}

	@Override
	public void setAnniversary(String Anniversary) {
		_Anniversary = Anniversary;
	}

	@JSON
	@Override
	public String getBusiness() {
		if (_Business == null) {
			return StringPool.BLANK;
		}
		else {
			return _Business;
		}
	}

	@Override
	public void setBusiness(String Business) {
		_Business = Business;
	}

	@JSON
	@Override
	public String getUnit() {
		if (_Unit == null) {
			return StringPool.BLANK;
		}
		else {
			return _Unit;
		}
	}

	@Override
	public void setUnit(String Unit) {
		_Unit = Unit;
	}

	@JSON
	@Override
	public String getGradeGroup() {
		if (_GradeGroup == null) {
			return StringPool.BLANK;
		}
		else {
			return _GradeGroup;
		}
	}

	@Override
	public void setGradeGroup(String GradeGroup) {
		_GradeGroup = GradeGroup;
	}

	@JSON
	@Override
	public String getGrade() {
		if (_Grade == null) {
			return StringPool.BLANK;
		}
		else {
			return _Grade;
		}
	}

	@Override
	public void setGrade(String Grade) {
		_Grade = Grade;
	}

	@JSON
	@Override
	public String getFunctionName() {
		if (_FunctionName == null) {
			return StringPool.BLANK;
		}
		else {
			return _FunctionName;
		}
	}

	@Override
	public void setFunctionName(String FunctionName) {
		_FunctionName = FunctionName;
	}

	@JSON
	@Override
	public String getDepartment() {
		if (_Department == null) {
			return StringPool.BLANK;
		}
		else {
			return _Department;
		}
	}

	@Override
	public void setDepartment(String Department) {
		_Department = Department;
	}

	@JSON
	@Override
	public String getDesignation() {
		if (_Designation == null) {
			return StringPool.BLANK;
		}
		else {
			return _Designation;
		}
	}

	@Override
	public void setDesignation(String Designation) {
		_Designation = Designation;
	}

	@JSON
	@Override
	public String getZone() {
		if (_Zone == null) {
			return StringPool.BLANK;
		}
		else {
			return _Zone;
		}
	}

	@Override
	public void setZone(String Zone) {
		_Zone = Zone;
	}

	@JSON
	@Override
	public String getRegion() {
		if (_Region == null) {
			return StringPool.BLANK;
		}
		else {
			return _Region;
		}
	}

	@Override
	public void setRegion(String Region) {
		_Region = Region;
	}

	@JSON
	@Override
	public String getLocation() {
		if (_Location == null) {
			return StringPool.BLANK;
		}
		else {
			return _Location;
		}
	}

	@Override
	public void setLocation(String Location) {
		_Location = Location;
	}

	@JSON
	@Override
	public String getProduct() {
		if (_Product == null) {
			return StringPool.BLANK;
		}
		else {
			return _Product;
		}
	}

	@Override
	public void setProduct(String Product) {
		_Product = Product;
	}

	@JSON
	@Override
	public String getJVBranch() {
		if (_JVBranch == null) {
			return StringPool.BLANK;
		}
		else {
			return _JVBranch;
		}
	}

	@Override
	public void setJVBranch(String JVBranch) {
		_JVBranch = JVBranch;
	}

	@JSON
	@Override
	public String getBranch() {
		if (_Branch == null) {
			return StringPool.BLANK;
		}
		else {
			return _Branch;
		}
	}

	@Override
	public void setBranch(String Branch) {
		_Branch = Branch;
	}

	@JSON
	@Override
	public String getCostcenter() {
		if (_Costcenter == null) {
			return StringPool.BLANK;
		}
		else {
			return _Costcenter;
		}
	}

	@Override
	public void setCostcenter(String Costcenter) {
		_Costcenter = Costcenter;
	}

	@JSON
	@Override
	public String getAreaHandled() {
		if (_AreaHandled == null) {
			return StringPool.BLANK;
		}
		else {
			return _AreaHandled;
		}
	}

	@Override
	public void setAreaHandled(String AreaHandled) {
		_AreaHandled = AreaHandled;
	}

	@JSON
	@Override
	public String getGender() {
		if (_gender == null) {
			return StringPool.BLANK;
		}
		else {
			return _gender;
		}
	}

	@Override
	public void setGender(String gender) {
		_gender = gender;
	}

	@JSON
	@Override
	public String getFirstName() {
		if (_FirstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _FirstName;
		}
	}

	@Override
	public void setFirstName(String FirstName) {
		_FirstName = FirstName;
	}

	@JSON
	@Override
	public String getLastName() {
		if (_LastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _LastName;
		}
	}

	@Override
	public void setLastName(String LastName) {
		_LastName = LastName;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public activeemployeeinfosample toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (activeemployeeinfosample)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		activeemployeeinfosampleImpl activeemployeeinfosampleImpl = new activeemployeeinfosampleImpl();

		activeemployeeinfosampleImpl.setSrno(getSrno());
		activeemployeeinfosampleImpl.setMilestone(getMilestone());
		activeemployeeinfosampleImpl.setEmpId(getEmpId());
		activeemployeeinfosampleImpl.setName(getName());
		activeemployeeinfosampleImpl.setEmailid(getEmailid());
		activeemployeeinfosampleImpl.setReason(getReason());
		activeemployeeinfosampleImpl.setPhoto(getPhoto());
		activeemployeeinfosampleImpl.setDOJ(getDOJ());
		activeemployeeinfosampleImpl.setExitOn(getExitOn());
		activeemployeeinfosampleImpl.setBirthday(getBirthday());
		activeemployeeinfosampleImpl.setAnniversary(getAnniversary());
		activeemployeeinfosampleImpl.setBusiness(getBusiness());
		activeemployeeinfosampleImpl.setUnit(getUnit());
		activeemployeeinfosampleImpl.setGradeGroup(getGradeGroup());
		activeemployeeinfosampleImpl.setGrade(getGrade());
		activeemployeeinfosampleImpl.setFunctionName(getFunctionName());
		activeemployeeinfosampleImpl.setDepartment(getDepartment());
		activeemployeeinfosampleImpl.setDesignation(getDesignation());
		activeemployeeinfosampleImpl.setZone(getZone());
		activeemployeeinfosampleImpl.setRegion(getRegion());
		activeemployeeinfosampleImpl.setLocation(getLocation());
		activeemployeeinfosampleImpl.setProduct(getProduct());
		activeemployeeinfosampleImpl.setJVBranch(getJVBranch());
		activeemployeeinfosampleImpl.setBranch(getBranch());
		activeemployeeinfosampleImpl.setCostcenter(getCostcenter());
		activeemployeeinfosampleImpl.setAreaHandled(getAreaHandled());
		activeemployeeinfosampleImpl.setGender(getGender());
		activeemployeeinfosampleImpl.setFirstName(getFirstName());
		activeemployeeinfosampleImpl.setLastName(getLastName());

		activeemployeeinfosampleImpl.resetOriginalValues();

		return activeemployeeinfosampleImpl;
	}

	@Override
	public int compareTo(activeemployeeinfosample activeemployeeinfosample) {
		int primaryKey = activeemployeeinfosample.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof activeemployeeinfosample)) {
			return false;
		}

		activeemployeeinfosample activeemployeeinfosample = (activeemployeeinfosample)obj;

		int primaryKey = activeemployeeinfosample.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		activeemployeeinfosampleModelImpl activeemployeeinfosampleModelImpl = this;

		activeemployeeinfosampleModelImpl._originalEmpId = activeemployeeinfosampleModelImpl._EmpId;

		activeemployeeinfosampleModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<activeemployeeinfosample> toCacheModel() {
		activeemployeeinfosampleCacheModel activeemployeeinfosampleCacheModel = new activeemployeeinfosampleCacheModel();

		activeemployeeinfosampleCacheModel.srno = getSrno();

		activeemployeeinfosampleCacheModel.Milestone = getMilestone();

		String Milestone = activeemployeeinfosampleCacheModel.Milestone;

		if ((Milestone != null) && (Milestone.length() == 0)) {
			activeemployeeinfosampleCacheModel.Milestone = null;
		}

		activeemployeeinfosampleCacheModel.EmpId = getEmpId();

		String EmpId = activeemployeeinfosampleCacheModel.EmpId;

		if ((EmpId != null) && (EmpId.length() == 0)) {
			activeemployeeinfosampleCacheModel.EmpId = null;
		}

		activeemployeeinfosampleCacheModel.Name = getName();

		String Name = activeemployeeinfosampleCacheModel.Name;

		if ((Name != null) && (Name.length() == 0)) {
			activeemployeeinfosampleCacheModel.Name = null;
		}

		activeemployeeinfosampleCacheModel.Emailid = getEmailid();

		String Emailid = activeemployeeinfosampleCacheModel.Emailid;

		if ((Emailid != null) && (Emailid.length() == 0)) {
			activeemployeeinfosampleCacheModel.Emailid = null;
		}

		activeemployeeinfosampleCacheModel.Reason = getReason();

		String Reason = activeemployeeinfosampleCacheModel.Reason;

		if ((Reason != null) && (Reason.length() == 0)) {
			activeemployeeinfosampleCacheModel.Reason = null;
		}

		activeemployeeinfosampleCacheModel.Photo = getPhoto();

		String Photo = activeemployeeinfosampleCacheModel.Photo;

		if ((Photo != null) && (Photo.length() == 0)) {
			activeemployeeinfosampleCacheModel.Photo = null;
		}

		activeemployeeinfosampleCacheModel.DOJ = getDOJ();

		String DOJ = activeemployeeinfosampleCacheModel.DOJ;

		if ((DOJ != null) && (DOJ.length() == 0)) {
			activeemployeeinfosampleCacheModel.DOJ = null;
		}

		activeemployeeinfosampleCacheModel.ExitOn = getExitOn();

		String ExitOn = activeemployeeinfosampleCacheModel.ExitOn;

		if ((ExitOn != null) && (ExitOn.length() == 0)) {
			activeemployeeinfosampleCacheModel.ExitOn = null;
		}

		activeemployeeinfosampleCacheModel.Birthday = getBirthday();

		String Birthday = activeemployeeinfosampleCacheModel.Birthday;

		if ((Birthday != null) && (Birthday.length() == 0)) {
			activeemployeeinfosampleCacheModel.Birthday = null;
		}

		activeemployeeinfosampleCacheModel.Anniversary = getAnniversary();

		String Anniversary = activeemployeeinfosampleCacheModel.Anniversary;

		if ((Anniversary != null) && (Anniversary.length() == 0)) {
			activeemployeeinfosampleCacheModel.Anniversary = null;
		}

		activeemployeeinfosampleCacheModel.Business = getBusiness();

		String Business = activeemployeeinfosampleCacheModel.Business;

		if ((Business != null) && (Business.length() == 0)) {
			activeemployeeinfosampleCacheModel.Business = null;
		}

		activeemployeeinfosampleCacheModel.Unit = getUnit();

		String Unit = activeemployeeinfosampleCacheModel.Unit;

		if ((Unit != null) && (Unit.length() == 0)) {
			activeemployeeinfosampleCacheModel.Unit = null;
		}

		activeemployeeinfosampleCacheModel.GradeGroup = getGradeGroup();

		String GradeGroup = activeemployeeinfosampleCacheModel.GradeGroup;

		if ((GradeGroup != null) && (GradeGroup.length() == 0)) {
			activeemployeeinfosampleCacheModel.GradeGroup = null;
		}

		activeemployeeinfosampleCacheModel.Grade = getGrade();

		String Grade = activeemployeeinfosampleCacheModel.Grade;

		if ((Grade != null) && (Grade.length() == 0)) {
			activeemployeeinfosampleCacheModel.Grade = null;
		}

		activeemployeeinfosampleCacheModel.FunctionName = getFunctionName();

		String FunctionName = activeemployeeinfosampleCacheModel.FunctionName;

		if ((FunctionName != null) && (FunctionName.length() == 0)) {
			activeemployeeinfosampleCacheModel.FunctionName = null;
		}

		activeemployeeinfosampleCacheModel.Department = getDepartment();

		String Department = activeemployeeinfosampleCacheModel.Department;

		if ((Department != null) && (Department.length() == 0)) {
			activeemployeeinfosampleCacheModel.Department = null;
		}

		activeemployeeinfosampleCacheModel.Designation = getDesignation();

		String Designation = activeemployeeinfosampleCacheModel.Designation;

		if ((Designation != null) && (Designation.length() == 0)) {
			activeemployeeinfosampleCacheModel.Designation = null;
		}

		activeemployeeinfosampleCacheModel.Zone = getZone();

		String Zone = activeemployeeinfosampleCacheModel.Zone;

		if ((Zone != null) && (Zone.length() == 0)) {
			activeemployeeinfosampleCacheModel.Zone = null;
		}

		activeemployeeinfosampleCacheModel.Region = getRegion();

		String Region = activeemployeeinfosampleCacheModel.Region;

		if ((Region != null) && (Region.length() == 0)) {
			activeemployeeinfosampleCacheModel.Region = null;
		}

		activeemployeeinfosampleCacheModel.Location = getLocation();

		String Location = activeemployeeinfosampleCacheModel.Location;

		if ((Location != null) && (Location.length() == 0)) {
			activeemployeeinfosampleCacheModel.Location = null;
		}

		activeemployeeinfosampleCacheModel.Product = getProduct();

		String Product = activeemployeeinfosampleCacheModel.Product;

		if ((Product != null) && (Product.length() == 0)) {
			activeemployeeinfosampleCacheModel.Product = null;
		}

		activeemployeeinfosampleCacheModel.JVBranch = getJVBranch();

		String JVBranch = activeemployeeinfosampleCacheModel.JVBranch;

		if ((JVBranch != null) && (JVBranch.length() == 0)) {
			activeemployeeinfosampleCacheModel.JVBranch = null;
		}

		activeemployeeinfosampleCacheModel.Branch = getBranch();

		String Branch = activeemployeeinfosampleCacheModel.Branch;

		if ((Branch != null) && (Branch.length() == 0)) {
			activeemployeeinfosampleCacheModel.Branch = null;
		}

		activeemployeeinfosampleCacheModel.Costcenter = getCostcenter();

		String Costcenter = activeemployeeinfosampleCacheModel.Costcenter;

		if ((Costcenter != null) && (Costcenter.length() == 0)) {
			activeemployeeinfosampleCacheModel.Costcenter = null;
		}

		activeemployeeinfosampleCacheModel.AreaHandled = getAreaHandled();

		String AreaHandled = activeemployeeinfosampleCacheModel.AreaHandled;

		if ((AreaHandled != null) && (AreaHandled.length() == 0)) {
			activeemployeeinfosampleCacheModel.AreaHandled = null;
		}

		activeemployeeinfosampleCacheModel.gender = getGender();

		String gender = activeemployeeinfosampleCacheModel.gender;

		if ((gender != null) && (gender.length() == 0)) {
			activeemployeeinfosampleCacheModel.gender = null;
		}

		activeemployeeinfosampleCacheModel.FirstName = getFirstName();

		String FirstName = activeemployeeinfosampleCacheModel.FirstName;

		if ((FirstName != null) && (FirstName.length() == 0)) {
			activeemployeeinfosampleCacheModel.FirstName = null;
		}

		activeemployeeinfosampleCacheModel.LastName = getLastName();

		String LastName = activeemployeeinfosampleCacheModel.LastName;

		if ((LastName != null) && (LastName.length() == 0)) {
			activeemployeeinfosampleCacheModel.LastName = null;
		}

		return activeemployeeinfosampleCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(59);

		sb.append("{srno=");
		sb.append(getSrno());
		sb.append(", Milestone=");
		sb.append(getMilestone());
		sb.append(", EmpId=");
		sb.append(getEmpId());
		sb.append(", Name=");
		sb.append(getName());
		sb.append(", Emailid=");
		sb.append(getEmailid());
		sb.append(", Reason=");
		sb.append(getReason());
		sb.append(", Photo=");
		sb.append(getPhoto());
		sb.append(", DOJ=");
		sb.append(getDOJ());
		sb.append(", ExitOn=");
		sb.append(getExitOn());
		sb.append(", Birthday=");
		sb.append(getBirthday());
		sb.append(", Anniversary=");
		sb.append(getAnniversary());
		sb.append(", Business=");
		sb.append(getBusiness());
		sb.append(", Unit=");
		sb.append(getUnit());
		sb.append(", GradeGroup=");
		sb.append(getGradeGroup());
		sb.append(", Grade=");
		sb.append(getGrade());
		sb.append(", FunctionName=");
		sb.append(getFunctionName());
		sb.append(", Department=");
		sb.append(getDepartment());
		sb.append(", Designation=");
		sb.append(getDesignation());
		sb.append(", Zone=");
		sb.append(getZone());
		sb.append(", Region=");
		sb.append(getRegion());
		sb.append(", Location=");
		sb.append(getLocation());
		sb.append(", Product=");
		sb.append(getProduct());
		sb.append(", JVBranch=");
		sb.append(getJVBranch());
		sb.append(", Branch=");
		sb.append(getBranch());
		sb.append(", Costcenter=");
		sb.append(getCostcenter());
		sb.append(", AreaHandled=");
		sb.append(getAreaHandled());
		sb.append(", gender=");
		sb.append(getGender());
		sb.append(", FirstName=");
		sb.append(getFirstName());
		sb.append(", LastName=");
		sb.append(getLastName());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(91);

		sb.append("<model><model-name>");
		sb.append("userapi.model.activeemployeeinfosample");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>srno</column-name><column-value><![CDATA[");
		sb.append(getSrno());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Milestone</column-name><column-value><![CDATA[");
		sb.append(getMilestone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>EmpId</column-name><column-value><![CDATA[");
		sb.append(getEmpId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Emailid</column-name><column-value><![CDATA[");
		sb.append(getEmailid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Reason</column-name><column-value><![CDATA[");
		sb.append(getReason());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Photo</column-name><column-value><![CDATA[");
		sb.append(getPhoto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DOJ</column-name><column-value><![CDATA[");
		sb.append(getDOJ());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ExitOn</column-name><column-value><![CDATA[");
		sb.append(getExitOn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Birthday</column-name><column-value><![CDATA[");
		sb.append(getBirthday());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Anniversary</column-name><column-value><![CDATA[");
		sb.append(getAnniversary());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Business</column-name><column-value><![CDATA[");
		sb.append(getBusiness());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Unit</column-name><column-value><![CDATA[");
		sb.append(getUnit());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>GradeGroup</column-name><column-value><![CDATA[");
		sb.append(getGradeGroup());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Grade</column-name><column-value><![CDATA[");
		sb.append(getGrade());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>FunctionName</column-name><column-value><![CDATA[");
		sb.append(getFunctionName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Department</column-name><column-value><![CDATA[");
		sb.append(getDepartment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Designation</column-name><column-value><![CDATA[");
		sb.append(getDesignation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Zone</column-name><column-value><![CDATA[");
		sb.append(getZone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Region</column-name><column-value><![CDATA[");
		sb.append(getRegion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Location</column-name><column-value><![CDATA[");
		sb.append(getLocation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Product</column-name><column-value><![CDATA[");
		sb.append(getProduct());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>JVBranch</column-name><column-value><![CDATA[");
		sb.append(getJVBranch());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Branch</column-name><column-value><![CDATA[");
		sb.append(getBranch());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Costcenter</column-name><column-value><![CDATA[");
		sb.append(getCostcenter());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>AreaHandled</column-name><column-value><![CDATA[");
		sb.append(getAreaHandled());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gender</column-name><column-value><![CDATA[");
		sb.append(getGender());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>FirstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = activeemployeeinfosample.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			activeemployeeinfosample.class
		};
	private int _srno;
	private String _Milestone;
	private String _EmpId;
	private String _originalEmpId;
	private String _Name;
	private String _Emailid;
	private String _Reason;
	private String _Photo;
	private String _DOJ;
	private String _ExitOn;
	private String _Birthday;
	private String _Anniversary;
	private String _Business;
	private String _Unit;
	private String _GradeGroup;
	private String _Grade;
	private String _FunctionName;
	private String _Department;
	private String _Designation;
	private String _Zone;
	private String _Region;
	private String _Location;
	private String _Product;
	private String _JVBranch;
	private String _Branch;
	private String _Costcenter;
	private String _AreaHandled;
	private String _gender;
	private String _FirstName;
	private String _LastName;
	private long _columnBitmask;
	private activeemployeeinfosample _escapedModel;
}